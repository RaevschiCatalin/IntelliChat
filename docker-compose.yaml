version: "3.8"

services:
  frontend:
    build:
      context: ./src
      dockerfile: Dockerfile
    labels:
      - "traefik.http.routers.frontend.rule=Host(`intelli-chat.tech`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - app_network
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: my_backend
    labels:
      - "traefik.http.routers.backend.rule=Host(`intelli-chat.tech`) && PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - app_network
    depends_on:
      - postgres
      - ollama
    env_file:
      - secrets.env

  postgres:
    image: postgres:latest
    container_name: my_postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    env_file:
      - secrets.env

  ollama:
    image: ollama/ollama
    container_name: my_ollama
    restart: always
    ports:
      - "11434:11434"
    networks:
      - app_network
    env_file:
      - secrets.env

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - app_network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
