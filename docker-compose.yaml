networks:
  app_network:
    driver: bridge

services:
  traefik:
    image: traefik:v3.3
    restart: always
    networks:
      - app_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
      - "./traefik.yml:/traefik.yml"
    labels:
      - "traefik.enable=true"
    env_file:
      - ./secrets.env
    
  frontend:
    build:
      context: ./src
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`intelli-chat.tech`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - app_network
    depends_on:
      - traefik
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./secrets.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=(Host(`intelli-chat.tech`) && (PathPrefix(`/api`)))" 
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - app_network
    depends_on:
      - traefik
      - postgres

  postgres:
    image: postgres:16
    restart: always
    env_file:
      - ./secrets.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  ollama:
    image: ollama/ollama
    container_name: ollama
    restart: on-failure
    networks:
      - app_network

volumes:
  postgres_data:
